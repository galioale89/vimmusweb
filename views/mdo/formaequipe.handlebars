<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Segoe UI;
        color: white;
    }

    header {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 60px;
    }

    .body {
        background-color: #001263e5;
        font-family: 'Roboto', Helvetica, sans-serif;
    }

    .lists {
        display: flex;
        flex: 1;
        width: 100%;
        cursor: pointer;
    }

    .fill {
        position: relative;
        height: 150px;
        width: 150px;
        top: 5px;
        left: 5px;
        cursor: pointer;

        display: flex;
        flex-flow: column;
        flex: 1;

        width: 100%;
        min-width: 250px;
        max-width: 350px;
        height: 100%;
        min-height: 300px;

        background-color: rgba(255, 253, 253, 0.1);
        margin: 0 15px;
        padding: 8px;
        transition: all 0.2s linear;

        background-color: #F3F3F3;
        border-radius: 8px;
        padding: 15px 20px;
        text-align: center;
        margin: 4px 0px;
    }

    .hold {
        border: solid 5px #ccc;
    }

    .empty {
        display: flex;
        flex: 1;
        width: 100%;
        cursor: pointer;
        display: flex;
        flex-flow: column;
        flex: 1;

        width: 100%;
        min-width: 250px;
        max-width: 350px;
        height: 100%;
        min-height: 300px;

        background-color: rgba(255, 253, 253, 0.1);
        margin: 0 15px;
        padding: 8px;
        transition: all 0.2s linear;
    }

    .hovered {
        background-color: 'rgba(0, 0, 0, 0.2)';
    }
</style>

<!-- Body -->
<form method='post' action='/pessoa/criarequipe'>
    <div class="body">
        <header>
            <div class="row text-center" style="margin-top: 100px">
                <h2><i class="bi bi-people"></i> Criação de Equipes</h2><br>
                <p style="color: white;">Aqui serão ser criadas as equipes que poderão ser vinculadas aos projetos </p>
            </div>
        </header>
        <div class="card-body">
            <div class="row" style="margin-top: 100px;width: 100%;">
                <div class="col-md-5">
                    <div class="row">
                        <div class="col-md-3">
                            <label class="col-form-label col-form-label-sm fw-bold" style="color: white;">Nome
                                Equipe:</label>
                        </div>
                        <div class="col-md-8">
                            <input type='texte' class="form-control">
                        </div>
                    </div>
                    <select class='form-select' name='equipe'>
                        {{#each equipe}}
                        <option value="{{_id}}">{{nome}}</option>
                        {{else}}
                        <option>Nenhuma equipe padrão cadastrada</option>
                    </select>
                    <div class="row">
                        <button class="col-6 btn btn-success btn-lg"
                            style="margin-left: 100px; margin-block-start: 60px;">Criar Equipe</button>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="lists">
                        <div class="empty">
                            {{#each instaladores}}
                            <div class="fill" style='color: black;' draggable="true" name='{{_id}}'>{{nome}}</div>
                            {{else}}
                            {{/each}}
                        </div>
                        <div class="empty">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<!-- End Body -->


<script>
    const fills = document.querySelectorAll('.fill');
    const empties = document.querySelectorAll('.empty');

    // Fill listeners
    let draggedItem = null;

    for (const fill of fills){
        fill.addEventListener('dragstar', dragStart)
        fill.addEventListener('dragenter', dragEnd)
    }

        function dragStart(e) {        
            e.preventDefault();
            setTimeout(function () {
                item.style.display = 'none';
            }, 0)             
            this.className += ' hold';
        }

        function dragEnd() {
            this.className = 'fill';
            setTimeout(function () {
                draggedItem.style.display = 'block';
                draggedItem = null;
            }, 0);
        }

        // Loop through empty boxes and add listeners
        for (const empty of empties) {
            empty.addEventListener('dragover', dragOver);
            empty.addEventListener('dragenter', dragEnter);
            empty.addEventListener('dragleave', dragLeave);
            empty.addEventListener('drop', dragDrop);
        }

        // Drag Functions

        function dragOver(e) {
            e.preventDefault();
        }

        function dragEnter(e) {
            e.preventDefault();
            this.className += ' hovered';
        }

        function dragLeave() {
            this.className = 'empty';
        }

        function dragDrop() {
            this.className = 'empty';
            this.append(fill);
        }

</script>